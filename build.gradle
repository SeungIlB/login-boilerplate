plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'                    // Spring Boot 플러그인
	id 'io.spring.dependency-management' version '1.1.7'              // 의존성 자동 관리
}

group = 'seungil'
version = '0.0.1-SNAPSHOT'

// Java 버전 설정 (JDK 17 사용)
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

// Lombok 설정
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral() // 의존성 중앙 저장소
}

dependencies {
	// Jakarta Servlet API (Spring Boot 3.x 필수, provided scope처럼 사용됨)
	compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'

	// Spring Boot 스타터들
	implementation 'org.springframework.boot:spring-boot-starter-web' // ← ✅ 이거 추가
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// JWT 라이브러리
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 처리용 (jackson 사용 시)

	// Redis 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// ✅ JUnit5 사용 설정
tasks.named('test') {
	useJUnitPlatform()
}
